{"version":3,"sources":["logo.svg","components/navigation-bar.component.js","components/home-page.component.js","components/todos-list.components.js","components/create-todo.component.js","components/edit-todo.components.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","NavigationBar","Navbar","bg","variant","expand","Brand","as","Link","to","src","logo","width","height","alt","Toggle","aria-controls","Collapse","Nav","className","Component","withRouter","HomePage","props","state","style","marginTop","Jumbotron","textAlign","Todo","todo","todoCompleted","todoDescription","todoResponsible","todoPriority","_id","Button","size","onClick","deleteTodo","TodosList","todos","todoList","bind","this","map","currentTodo","key","id","axios","delete","process","then","res","console","log","data","catch","err","cancelTokenSource","CancelToken","source","get","cancelToken","token","setState","cancel","Table","striped","hover","responsive","CreateTodo","onChangeTodoDescription","onChangeTodoResponsible","onChangeTodoPriority","onSubmit","e","target","value","preventDefault","newTodo","post","Form","Group","Label","Control","type","onChange","Check","name","label","checked","EditTodo","onChangeTodoCompleted","match","params","history","push","Boolean","window","location","hostname","ReactDOM","render","path","exact","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e08c9912.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.1df80df1.svg\";","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport logo from '../logo.svg'\r\n\r\nclass NavigationBar extends Component {\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n                <Navbar.Brand as={Link} to=\"/\">\r\n                    <img src={logo} width=\"auto\" height=\"35\" alt=\"MERN Todo App Home\"/>\r\n                    MERN Stack Todo App\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                    <Navbar.Collapse>\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link as={Link} to=\"/todos\">Todo List</Nav.Link> \r\n                            <Nav.Link as={Link} to=\"/create\">New Todo</Nav.Link> \r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(NavigationBar);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Jumbotron, Nav } from 'react-bootstrap';\r\n\r\nexport default class HomePage extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {}\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"container\" style={{marginTop: 20}}>\r\n            <h3>Home</h3>\r\n                <Jumbotron className=\"bg-dark\">\r\n                    <h4 className=\"text-light\" style={{textAlign: \"center\"}}>A simple Todo Web App built to familiarize myself with the MERN Stack</h4>\r\n                    <br/>\r\n                    <div className=\"form-inline justify-content-center\">\r\n                        <Nav.Link className=\"btn btn-primary m-1\" as={Link} to=\"/todos\">Todo List</Nav.Link>\r\n                        <Nav.Link className=\"btn btn-primary m-1\" as={Link} to=\"/create\">New Todo</Nav.Link>\r\n                    </div>\r\n                </Jumbotron>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\n//Todo Component\r\nconst Todo = props => (\r\n    <tr>\r\n        <td className={props.todo.todoCompleted ? 'completed' : ''}>{props.todo.todoDescription}</td>\r\n        <td className={props.todo.todoCompleted ? 'completed' : ''}>{props.todo.todoResponsible}</td>\r\n        <td className={props.todo.todoCompleted ? 'completed' : ''}>{props.todo.todoPriority}</td>\r\n        <td>\r\n            <Link className=\"btn btn-warning btn-sm\" to={\"/edit/\" + props.todo._id}>Edit</Link>\r\n            {\" | \"}\r\n            <Button variant=\"danger\" size=\"sm\" onClick={() => {props.deleteTodo(props.todo._id)}}>Delete</Button>\r\n        </td>\r\n    </tr>\r\n)\r\n\r\nexport default class TodosList extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            todos: []\r\n        }\r\n\r\n        this.todoList = this.todoList.bind(this);\r\n        this.deleteTodo = this.deleteTodo.bind(this);\r\n    }\r\n\r\n    //populate todo list\r\n    todoList(){\r\n        return this.state.todos.map( (currentTodo) => {\r\n            return <Todo todo={currentTodo} deleteTodo={this.deleteTodo} key={currentTodo._id} />;\r\n        })\r\n    }\r\n\r\n    deleteTodo(id){\r\n        axios.delete(process.env.REACT_APP_BACKEND_URL + \"/todo/delete/\" + id)\r\n        .then(res => console.log(res.data))\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    //get all todos\r\n    componentDidMount(){\r\n        this.cancelTokenSource = axios.CancelToken.source();\r\n        axios.get(process.env.REACT_APP_BACKEND_URL + \"/todo/list\", {\r\n            cancelToken: this.cancelTokenSource.token\r\n        })\r\n        .then( res => {\r\n            this.setState({\r\n                todos: res.data\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    //update todos list on todo change\r\n    componentDidUpdate() {\r\n        this.cancelTokenSource = axios.CancelToken.source();\r\n        axios.get(process.env.REACT_APP_BACKEND_URL + \"/todo/list\", {\r\n            cancelToken: this.cancelTokenSource.token\r\n        })\r\n        .then( res => {\r\n            this.setState({\r\n                todos: res.data\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n      }\r\n    \r\n      componentWillUnmount() {\r\n        this.cancelTokenSource && this.cancelTokenSource.cancel();\r\n      }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"container\" style={{marginTop: 20}}>\r\n                <h3>Todo List</h3>\r\n                <Table striped hover responsive variant=\"dark\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Description</th>\r\n                            <th>Responsible</th>\r\n                            <th>Priority</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { this.todoList() }\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nexport default class CreateTodo extends Component {\r\n    \r\n    constructor(props){\r\n        super(props)\r\n\r\n        //state\r\n        this.state ={\r\n            todoDescription: \"\",\r\n            todoResponsible: \"\",\r\n            todoPriority: \"\",\r\n            todoCompleted: false\r\n        }\r\n\r\n        //bind this\r\n        this.onChangeTodoDescription = this.onChangeTodoDescription.bind(this);\r\n        this.onChangeTodoResponsible = this.onChangeTodoResponsible.bind(this);\r\n        this.onChangeTodoPriority = this.onChangeTodoPriority.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    //state change handlers\r\n    onChangeTodoDescription(e){\r\n        this.setState({\r\n            todoDescription: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeTodoResponsible(e){\r\n        this.setState({\r\n            todoResponsible: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeTodoPriority(e){\r\n        this.setState({\r\n            todoPriority: e.target.value\r\n        })\r\n    }\r\n\r\n    //submit todo and reset state to default\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        //new todo\r\n        const newTodo = {\r\n            todoDescription: this.state.todoDescription,\r\n            todoResponsible: this.state.todoResponsible,\r\n            todoPriority: this.state.todoPriority,\r\n            todoCompleted: this.state.todoCompleted\r\n        }\r\n\r\n        //submit to backend\r\n        axios.post(process.env.REACT_APP_BACKEND_URL + \"/todo/create\", newTodo)\r\n        .then( res => console.log(res))\r\n        .catch( err =>  console.log(err))\r\n\r\n        this.setState({\r\n            todoDescription: \"\",\r\n            todoResponsible: \"\",\r\n            todoPriority: \"\",\r\n            todoCompleted: false\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"container\" style={{marginTop: 20}}>\r\n                <h3>Create New Todo</h3>\r\n                <Form onSubmit={this.onSubmit}>\r\n                    <Form.Group>\r\n                        <Form.Label>Description:</Form.Label>\r\n                        <Form.Control type=\"text\" value={this.state.todoDescription} onChange={this.onChangeTodoDescription}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Responsible:</Form.Label>\r\n                        <Form.Control type=\"text\" value={this.state.todoResponsible} onChange={this.onChangeTodoResponsible}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group >\r\n                        <Form.Check type=\"radio\" name=\"priorityOptions\" id=\"priorityLow\" label=\"Low\" value=\"Low\" checked={this.state.todoPriority === \"Low\"} onChange={this.onChangeTodoPriority}/>\r\n                        <Form.Check type=\"radio\" name=\"priorityOptions\" id=\"priorityMedium\" label=\"Medium\" value=\"Medium\" checked={this.state.todoPriority === \"Medium\"} onChange={this.onChangeTodoPriority}/>\r\n                        <Form.Check type=\"radio\" name=\"priorityOptions\" id=\"priorityHigh\" label=\"High\" value=\"High\" checked={this.state.todoPriority === \"High\"} onChange={this.onChangeTodoPriority}/>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\" value=\"Submit Todo\">Submit Todo</Button>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nexport default class EditTodo extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            todoDescription: '',\r\n            todoResponsible: '',\r\n            todoPriority: '',\r\n            todoCompleted: false\r\n        }\r\n        this.onChangeTodoDescription = this.onChangeTodoDescription.bind(this);\r\n        this.onChangeTodoResponsible = this.onChangeTodoResponsible.bind(this);\r\n        this.onChangeTodoPriority = this.onChangeTodoPriority.bind(this);\r\n        this.onChangeTodoCompleted = this.onChangeTodoCompleted.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get(process.env.REACT_APP_BACKEND_URL + '/todo/find/' + this.props.match.params.id)\r\n        .then( res => {\r\n            this.setState({\r\n                todoDescription: res.data.todoDescription,\r\n                todoResponsible: res.data.todoResponsible,\r\n                todoPriority: res.data.todoPriority,\r\n                todoCompleted: res.data.todoCompleted\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    //state change handlers\r\n    onChangeTodoDescription(e){\r\n        this.setState({\r\n            todoDescription: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeTodoResponsible(e){\r\n        this.setState({\r\n            todoResponsible: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeTodoPriority(e){\r\n        this.setState({\r\n            todoPriority: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeTodoCompleted(e){\r\n        this.setState({\r\n            todoCompleted: !this.state.todoCompleted\r\n        })\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        //existing todo with changes\r\n        const newTodo = {\r\n            todoDescription: this.state.todoDescription,\r\n            todoResponsible: this.state.todoResponsible,\r\n            todoPriority: this.state.todoPriority,\r\n            todoCompleted: this.state.todoCompleted\r\n        }\r\n\r\n        //submit to backend\r\n        axios.post(process.env.REACT_APP_BACKEND_URL + \"/todo/update/\" + this.props.match.params.id, newTodo)\r\n        .then( res => console.log(res))\r\n        .catch( err =>  console.log(err))\r\n\r\n        //route back to todos\r\n        this.props.history.push('/todos')\r\n\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"container\" style={{marginTop: 20}}>\r\n                <h3>Edit Todo</h3>\r\n                <Form onSubmit={this.onSubmit}>\r\n                    <Form.Group>\r\n                        <Form.Label>Description:</Form.Label>\r\n                        <Form.Control type=\"text\" value={this.state.todoDescription} onChange={this.onChangeTodoDescription}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Responsible:</Form.Label>\r\n                        <Form.Control type=\"text\" value={this.state.todoResponsible} onChange={this.onChangeTodoResponsible}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group >\r\n                        <Form.Check type=\"radio\" name=\"priorityOptions\" id=\"priorityLow\" label=\"Low\" value=\"Low\" checked={this.state.todoPriority === \"Low\"} onChange={this.onChangeTodoPriority}/>\r\n                        <Form.Check type=\"radio\" name=\"priorityOptions\" id=\"priorityMedium\" label=\"Medium\" value=\"Medium\" checked={this.state.todoPriority === \"Medium\"} onChange={this.onChangeTodoPriority}/>\r\n                        <Form.Check type=\"radio\" name=\"priorityOptions\" id=\"priorityHigh\" label=\"High\" value=\"High\" checked={this.state.todoPriority === \"High\"} onChange={this.onChangeTodoPriority}/>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Check type=\"checkbox\" name=\"completedCheckbox\" id=\"completedCheckbox\" label=\"Completed\" checked={this.state.todoCompleted} onChange={this.onChangeTodoCompleted}></Form.Check>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\" value=\"Submit Todo\">Submit Todo</Button>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css'\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport NavigationBar from './components/navigation-bar.component';\nimport HomePage from './components/home-page.component';\nimport TodosList from './components/todos-list.components';\nimport CreateTodo from './components/create-todo.component';\nimport EditTodo from './components/edit-todo.components';\n\nexport default function App() {\n  return (\n    <div>\n      <Router>\n        <NavigationBar />\n        <Route path=\"/\" exact component={HomePage} />\n        <Route path=\"/todos\" exact component={TodosList} />\n        <Route path=\"/create\" component={CreateTodo} />\n        <Route path=\"/edit/:id\" component={EditTodo} />\n      </Router>\n    </div>\n  );\n}\n"],"sourceRoot":""}